#!/usr/bin/env ruby

class PrIdFinder
  RE_MESSAGE = /Merge\s+(?:pull\s+request|pr)\s+\#?(\d+)\s/i

  def self.find(sha)
    return cache[sha] if cache.key?(sha)

    message = `git show --oneline #{sha} 2>/dev/null`

    cache[sha] = (message =~ RE_MESSAGE) ? "PR ##{$1}" : nil
  rescue ArgumentError => e
    if e.message.start_with?('invalid byte sequence in ')
      cache[sha] = nil
    else
      raise
    end
  end

  private

  def self.cache
    @cache ||= {}
  end
end

class Printer
  def initialize(file:)
    if !File.exist?(file)
      raise "file not found: #{file}"
    end

    @file = file
  end

  def print
    open("| git blame --first-parent #{@file} | cat") { |io|
      io.each_line.with_index(1) do |line, i|
        sha, src = line.split(/ .*?\) /)

        id = PrIdFinder.find(sha) || sha

        puts "#{id.ljust(11)} #{i.to_s.rjust(4)}) #{src}"
      end
    }
  end
end

Printer.new(file: ARGV[0]).print
